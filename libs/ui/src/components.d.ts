/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  Color,
} from './interface';

export namespace Components {
  interface HiveUiHeading {
    'base': boolean;
    'bold': boolean;
    /**
    * The primary color of the label. Uses the branded CSS variables that are globally available to the application.
    */
    'color': Color;
    'large': boolean;
    /**
    * The maximum lines to display before truncating the text. Default behavior shows all lines of text with no truncation.
    */
    'maxLines': number;
    'medium': boolean;
    'small': boolean;
    'xbold': boolean;
    'xlarge': boolean;
    'xsmall': boolean;
    'xxlarge': boolean;
  }
  interface HiveUiIcon {
    /**
    * Specifies the label to use for accessibility. Defaults to the icon name.
    */
    'ariaLabel'?: string;
    'color': Color;
    /**
    * If enabled, ion-icon will be loaded lazily when it's visible in the viewport. Default, `false`.
    */
    'lazy': boolean;
    /**
    * Specifies which icon to use from the built-in set of icons.
    */
    'name'?: string;
    /**
    * The size of the icon. Available options are: `"small"` and `"large"`.
    */
    'size'?: string;
  }
  interface HiveUiLabel {
    'base': boolean;
    'bold': boolean;
    'book': boolean;
    'capitalize': boolean;
    /**
    * The primary color of the label. Uses the branded CSS variables that are globally available to the application.
    */
    'color': Color;
    'large': boolean;
    'lowercase': boolean;
    /**
    * The maximum lines to display before truncating the text. Default behavior shows all lines of text with no truncation.
    */
    'maxLines': number;
    'medium': boolean;
    'semibold': boolean;
    'small': boolean;
    'type': 'label' | 'text';
    'uppercase': boolean;
    'xbold': boolean;
    'xlarge': boolean;
    'xsmall': boolean;
    'xxlarge': boolean;
  }
}

declare global {


  interface HTMLHiveUiHeadingElement extends Components.HiveUiHeading, HTMLStencilElement {}
  var HTMLHiveUiHeadingElement: {
    prototype: HTMLHiveUiHeadingElement;
    new (): HTMLHiveUiHeadingElement;
  };

  interface HTMLHiveUiIconElement extends Components.HiveUiIcon, HTMLStencilElement {}
  var HTMLHiveUiIconElement: {
    prototype: HTMLHiveUiIconElement;
    new (): HTMLHiveUiIconElement;
  };

  interface HTMLHiveUiLabelElement extends Components.HiveUiLabel, HTMLStencilElement {}
  var HTMLHiveUiLabelElement: {
    prototype: HTMLHiveUiLabelElement;
    new (): HTMLHiveUiLabelElement;
  };
  interface HTMLElementTagNameMap {
    'hive-ui-heading': HTMLHiveUiHeadingElement;
    'hive-ui-icon': HTMLHiveUiIconElement;
    'hive-ui-label': HTMLHiveUiLabelElement;
  }
}

declare namespace LocalJSX {
  interface HiveUiHeading extends JSXBase.HTMLAttributes<HTMLHiveUiHeadingElement> {
    'base'?: boolean;
    'bold'?: boolean;
    /**
    * The primary color of the label. Uses the branded CSS variables that are globally available to the application.
    */
    'color'?: Color;
    'large'?: boolean;
    /**
    * The maximum lines to display before truncating the text. Default behavior shows all lines of text with no truncation.
    */
    'maxLines'?: number;
    'medium'?: boolean;
    'small'?: boolean;
    'xbold'?: boolean;
    'xlarge'?: boolean;
    'xsmall'?: boolean;
    'xxlarge'?: boolean;
  }
  interface HiveUiIcon extends JSXBase.HTMLAttributes<HTMLHiveUiIconElement> {
    /**
    * Specifies the label to use for accessibility. Defaults to the icon name.
    */
    'ariaLabel'?: string;
    'color'?: Color;
    /**
    * If enabled, ion-icon will be loaded lazily when it's visible in the viewport. Default, `false`.
    */
    'lazy'?: boolean;
    /**
    * Specifies which icon to use from the built-in set of icons.
    */
    'name'?: string;
    /**
    * The size of the icon. Available options are: `"small"` and `"large"`.
    */
    'size'?: string;
  }
  interface HiveUiLabel extends JSXBase.HTMLAttributes<HTMLHiveUiLabelElement> {
    'base'?: boolean;
    'bold'?: boolean;
    'book'?: boolean;
    'capitalize'?: boolean;
    /**
    * The primary color of the label. Uses the branded CSS variables that are globally available to the application.
    */
    'color'?: Color;
    'large'?: boolean;
    'lowercase'?: boolean;
    /**
    * The maximum lines to display before truncating the text. Default behavior shows all lines of text with no truncation.
    */
    'maxLines'?: number;
    'medium'?: boolean;
    'semibold'?: boolean;
    'small'?: boolean;
    'type'?: 'label' | 'text';
    'uppercase'?: boolean;
    'xbold'?: boolean;
    'xlarge'?: boolean;
    'xsmall'?: boolean;
    'xxlarge'?: boolean;
  }

  interface IntrinsicElements {
    'hive-ui-heading': HiveUiHeading;
    'hive-ui-icon': HiveUiIcon;
    'hive-ui-label': HiveUiLabel;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


